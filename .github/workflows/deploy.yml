name: Build → Push → Deploy (+Notify)

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/miroslavnecas/website
  STACK_DIR: /root/website
  N8N_URL: ${{ secrets.N8N_WEBHOOK_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.meta.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - id: meta
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"
      - name: Warm cache (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: false
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: pushimg
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha

  notify_predeploy:
    runs-on: ubuntu-latest
    needs: [build, push]
    steps:
      - name: Notify n8n (pushed, starting deploy)
        run: |
          set -e
          echo "POST $N8N_URL"
          curl --fail -sv -X POST "$N8N_URL" -H "Content-Type: application/json" \
            -d @- <<'JSON'
          {
            "stage": "push_complete",
            "repo": "${{ github.repository }}",
            "ref":  "${{ github.ref }}",
            "sha":  "${{ needs.build.outputs.sha }}",
            "run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          JSON

  deploy:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -euo pipefail
            cd "${STACK_DIR}"
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USER }}" --password-stdin || true
            docker compose pull
            docker compose up -d
            docker image prune -f
          envs: STACK_DIR,GHCR_USER,GHCR_TOKEN

  notify_final:
    runs-on: ubuntu-latest
    needs: [build, push, deploy]
    if: always()
    steps:
      - name: Notify n8n (final)
        run: |
          set -e
          echo "POST $N8N_URL"
          curl --fail -sv -X POST "$N8N_URL" -H "Content-Type: application/json" \
            -d @- <<'JSON'
          {
            "stage": "final",
            "repo": "${{ github.repository }}",
            "ref":  "${{ github.ref }}",
            "sha":  "${{ needs.build.outputs.sha }}",
            "results": {
              "build":  "${{ needs.build.result }}",
              "push":   "${{ needs.push.result }}",
              "deploy": "${{ needs.deploy.result }}"
            },
            "run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          JSON
